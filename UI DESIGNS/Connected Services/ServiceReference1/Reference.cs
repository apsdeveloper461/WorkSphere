//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UI_DESIGNS.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/WorkShere_Backend")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ActivationStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool WorkingStatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ActivationStatus {
            get {
                return this.ActivationStatusField;
            }
            set {
                if ((this.ActivationStatusField.Equals(value) != true)) {
                    this.ActivationStatusField = value;
                    this.RaisePropertyChanged("ActivationStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Role {
            get {
                return this.RoleField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleField, value) != true)) {
                    this.RoleField = value;
                    this.RaisePropertyChanged("Role");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool WorkingStatus {
            get {
                return this.WorkingStatusField;
            }
            set {
                if ((this.WorkingStatusField.Equals(value) != true)) {
                    this.WorkingStatusField = value;
                    this.RaisePropertyChanged("WorkingStatus");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Project", Namespace="http://schemas.datacontract.org/2004/07/WorkShere_Backend")]
    [System.SerializableAttribute()]
    public partial class Project : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private UI_DESIGNS.ServiceReference1.User[] AssignedToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public UI_DESIGNS.ServiceReference1.User[] AssignedTo {
            get {
                return this.AssignedToField;
            }
            set {
                if ((object.ReferenceEquals(this.AssignedToField, value) != true)) {
                    this.AssignedToField = value;
                    this.RaisePropertyChanged("AssignedTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((this.EndDateField.Equals(value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Feedback", Namespace="http://schemas.datacontract.org/2004/07/WorkShere_Backend")]
    [System.SerializableAttribute()]
    public partial class Feedback : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProjectIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SenderEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SenderIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProjectId {
            get {
                return this.ProjectIdField;
            }
            set {
                if ((this.ProjectIdField.Equals(value) != true)) {
                    this.ProjectIdField = value;
                    this.RaisePropertyChanged("ProjectId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SenderEmail {
            get {
                return this.SenderEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.SenderEmailField, value) != true)) {
                    this.SenderEmailField = value;
                    this.RaisePropertyChanged("SenderEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SenderId {
            get {
                return this.SenderIdField;
            }
            set {
                if ((this.SenderIdField.Equals(value) != true)) {
                    this.SenderIdField = value;
                    this.RaisePropertyChanged("SenderId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Time {
            get {
                return this.TimeField;
            }
            set {
                if ((this.TimeField.Equals(value) != true)) {
                    this.TimeField = value;
                    this.RaisePropertyChanged("Time");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompositeType", Namespace="http://schemas.datacontract.org/2004/07/WorkShere_Backend")]
    [System.SerializableAttribute()]
    public partial class CompositeType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BoolValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StringValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BoolValue {
            get {
                return this.BoolValueField;
            }
            set {
                if ((this.BoolValueField.Equals(value) != true)) {
                    this.BoolValueField = value;
                    this.RaisePropertyChanged("BoolValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringValue {
            get {
                return this.StringValueField;
            }
            set {
                if ((object.ReferenceEquals(this.StringValueField, value) != true)) {
                    this.StringValueField = value;
                    this.RaisePropertyChanged("StringValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/login", ReplyAction="http://tempuri.org/IService1/loginResponse")]
        UI_DESIGNS.ServiceReference1.User login(string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/login", ReplyAction="http://tempuri.org/IService1/loginResponse")]
        System.Threading.Tasks.Task<UI_DESIGNS.ServiceReference1.User> loginAsync(string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addNewUser", ReplyAction="http://tempuri.org/IService1/addNewUserResponse")]
        string addNewUser(UI_DESIGNS.ServiceReference1.User admin, string role, string name, string email, string password, bool activationStatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addNewUser", ReplyAction="http://tempuri.org/IService1/addNewUserResponse")]
        System.Threading.Tasks.Task<string> addNewUserAsync(UI_DESIGNS.ServiceReference1.User admin, string role, string name, string email, string password, bool activationStatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/displayUsers", ReplyAction="http://tempuri.org/IService1/displayUsersResponse")]
        UI_DESIGNS.ServiceReference1.User[] displayUsers(UI_DESIGNS.ServiceReference1.User admin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/displayUsers", ReplyAction="http://tempuri.org/IService1/displayUsersResponse")]
        System.Threading.Tasks.Task<UI_DESIGNS.ServiceReference1.User[]> displayUsersAsync(UI_DESIGNS.ServiceReference1.User admin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/updateUser", ReplyAction="http://tempuri.org/IService1/updateUserResponse")]
        string updateUser(UI_DESIGNS.ServiceReference1.User admin, int id, string role, string name, string email, string password, bool activationStatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/updateUser", ReplyAction="http://tempuri.org/IService1/updateUserResponse")]
        System.Threading.Tasks.Task<string> updateUserAsync(UI_DESIGNS.ServiceReference1.User admin, int id, string role, string name, string email, string password, bool activationStatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addNewProject", ReplyAction="http://tempuri.org/IService1/addNewProjectResponse")]
        string addNewProject(UI_DESIGNS.ServiceReference1.User admin, string title, string description, string[] AssignedToUserEmails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addNewProject", ReplyAction="http://tempuri.org/IService1/addNewProjectResponse")]
        System.Threading.Tasks.Task<string> addNewProjectAsync(UI_DESIGNS.ServiceReference1.User admin, string title, string description, string[] AssignedToUserEmails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/updateProject", ReplyAction="http://tempuri.org/IService1/updateProjectResponse")]
        string updateProject(UI_DESIGNS.ServiceReference1.User admin, int pid, string title, string description);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/updateProject", ReplyAction="http://tempuri.org/IService1/updateProjectResponse")]
        System.Threading.Tasks.Task<string> updateProjectAsync(UI_DESIGNS.ServiceReference1.User admin, int pid, string title, string description);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/displayProject", ReplyAction="http://tempuri.org/IService1/displayProjectResponse")]
        UI_DESIGNS.ServiceReference1.Project[] displayProject(UI_DESIGNS.ServiceReference1.User admin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/displayProject", ReplyAction="http://tempuri.org/IService1/displayProjectResponse")]
        System.Threading.Tasks.Task<UI_DESIGNS.ServiceReference1.Project[]> displayProjectAsync(UI_DESIGNS.ServiceReference1.User admin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/markProjectAsComplete", ReplyAction="http://tempuri.org/IService1/markProjectAsCompleteResponse")]
        string markProjectAsComplete(UI_DESIGNS.ServiceReference1.User admin, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/markProjectAsComplete", ReplyAction="http://tempuri.org/IService1/markProjectAsCompleteResponse")]
        System.Threading.Tasks.Task<string> markProjectAsCompleteAsync(UI_DESIGNS.ServiceReference1.User admin, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/projectOnWhichWork", ReplyAction="http://tempuri.org/IService1/projectOnWhichWorkResponse")]
        UI_DESIGNS.ServiceReference1.Project[] projectOnWhichWork(UI_DESIGNS.ServiceReference1.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/projectOnWhichWork", ReplyAction="http://tempuri.org/IService1/projectOnWhichWorkResponse")]
        System.Threading.Tasks.Task<UI_DESIGNS.ServiceReference1.Project[]> projectOnWhichWorkAsync(UI_DESIGNS.ServiceReference1.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addNewFeedback", ReplyAction="http://tempuri.org/IService1/addNewFeedbackResponse")]
        string addNewFeedback(UI_DESIGNS.ServiceReference1.User user, int projectId, string message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addNewFeedback", ReplyAction="http://tempuri.org/IService1/addNewFeedbackResponse")]
        System.Threading.Tasks.Task<string> addNewFeedbackAsync(UI_DESIGNS.ServiceReference1.User user, int projectId, string message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getFeedbacks", ReplyAction="http://tempuri.org/IService1/getFeedbacksResponse")]
        UI_DESIGNS.ServiceReference1.Feedback[] getFeedbacks(UI_DESIGNS.ServiceReference1.User user, int projectId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getFeedbacks", ReplyAction="http://tempuri.org/IService1/getFeedbacksResponse")]
        System.Threading.Tasks.Task<UI_DESIGNS.ServiceReference1.Feedback[]> getFeedbacksAsync(UI_DESIGNS.ServiceReference1.User user, int projectId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        UI_DESIGNS.ServiceReference1.CompositeType GetDataUsingDataContract(UI_DESIGNS.ServiceReference1.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        System.Threading.Tasks.Task<UI_DESIGNS.ServiceReference1.CompositeType> GetDataUsingDataContractAsync(UI_DESIGNS.ServiceReference1.CompositeType composite);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : UI_DESIGNS.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<UI_DESIGNS.ServiceReference1.IService1>, UI_DESIGNS.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public UI_DESIGNS.ServiceReference1.User login(string email, string password) {
            return base.Channel.login(email, password);
        }
        
        public System.Threading.Tasks.Task<UI_DESIGNS.ServiceReference1.User> loginAsync(string email, string password) {
            return base.Channel.loginAsync(email, password);
        }
        
        public string addNewUser(UI_DESIGNS.ServiceReference1.User admin, string role, string name, string email, string password, bool activationStatus) {
            return base.Channel.addNewUser(admin, role, name, email, password, activationStatus);
        }
        
        public System.Threading.Tasks.Task<string> addNewUserAsync(UI_DESIGNS.ServiceReference1.User admin, string role, string name, string email, string password, bool activationStatus) {
            return base.Channel.addNewUserAsync(admin, role, name, email, password, activationStatus);
        }
        
        public UI_DESIGNS.ServiceReference1.User[] displayUsers(UI_DESIGNS.ServiceReference1.User admin) {
            return base.Channel.displayUsers(admin);
        }
        
        public System.Threading.Tasks.Task<UI_DESIGNS.ServiceReference1.User[]> displayUsersAsync(UI_DESIGNS.ServiceReference1.User admin) {
            return base.Channel.displayUsersAsync(admin);
        }
        
        public string updateUser(UI_DESIGNS.ServiceReference1.User admin, int id, string role, string name, string email, string password, bool activationStatus) {
            return base.Channel.updateUser(admin, id, role, name, email, password, activationStatus);
        }
        
        public System.Threading.Tasks.Task<string> updateUserAsync(UI_DESIGNS.ServiceReference1.User admin, int id, string role, string name, string email, string password, bool activationStatus) {
            return base.Channel.updateUserAsync(admin, id, role, name, email, password, activationStatus);
        }
        
        public string addNewProject(UI_DESIGNS.ServiceReference1.User admin, string title, string description, string[] AssignedToUserEmails) {
            return base.Channel.addNewProject(admin, title, description, AssignedToUserEmails);
        }
        
        public System.Threading.Tasks.Task<string> addNewProjectAsync(UI_DESIGNS.ServiceReference1.User admin, string title, string description, string[] AssignedToUserEmails) {
            return base.Channel.addNewProjectAsync(admin, title, description, AssignedToUserEmails);
        }
        
        public string updateProject(UI_DESIGNS.ServiceReference1.User admin, int pid, string title, string description) {
            return base.Channel.updateProject(admin, pid, title, description);
        }
        
        public System.Threading.Tasks.Task<string> updateProjectAsync(UI_DESIGNS.ServiceReference1.User admin, int pid, string title, string description) {
            return base.Channel.updateProjectAsync(admin, pid, title, description);
        }
        
        public UI_DESIGNS.ServiceReference1.Project[] displayProject(UI_DESIGNS.ServiceReference1.User admin) {
            return base.Channel.displayProject(admin);
        }
        
        public System.Threading.Tasks.Task<UI_DESIGNS.ServiceReference1.Project[]> displayProjectAsync(UI_DESIGNS.ServiceReference1.User admin) {
            return base.Channel.displayProjectAsync(admin);
        }
        
        public string markProjectAsComplete(UI_DESIGNS.ServiceReference1.User admin, int id) {
            return base.Channel.markProjectAsComplete(admin, id);
        }
        
        public System.Threading.Tasks.Task<string> markProjectAsCompleteAsync(UI_DESIGNS.ServiceReference1.User admin, int id) {
            return base.Channel.markProjectAsCompleteAsync(admin, id);
        }
        
        public UI_DESIGNS.ServiceReference1.Project[] projectOnWhichWork(UI_DESIGNS.ServiceReference1.User user) {
            return base.Channel.projectOnWhichWork(user);
        }
        
        public System.Threading.Tasks.Task<UI_DESIGNS.ServiceReference1.Project[]> projectOnWhichWorkAsync(UI_DESIGNS.ServiceReference1.User user) {
            return base.Channel.projectOnWhichWorkAsync(user);
        }
        
        public string addNewFeedback(UI_DESIGNS.ServiceReference1.User user, int projectId, string message) {
            return base.Channel.addNewFeedback(user, projectId, message);
        }
        
        public System.Threading.Tasks.Task<string> addNewFeedbackAsync(UI_DESIGNS.ServiceReference1.User user, int projectId, string message) {
            return base.Channel.addNewFeedbackAsync(user, projectId, message);
        }
        
        public UI_DESIGNS.ServiceReference1.Feedback[] getFeedbacks(UI_DESIGNS.ServiceReference1.User user, int projectId) {
            return base.Channel.getFeedbacks(user, projectId);
        }
        
        public System.Threading.Tasks.Task<UI_DESIGNS.ServiceReference1.Feedback[]> getFeedbacksAsync(UI_DESIGNS.ServiceReference1.User user, int projectId) {
            return base.Channel.getFeedbacksAsync(user, projectId);
        }
        
        public UI_DESIGNS.ServiceReference1.CompositeType GetDataUsingDataContract(UI_DESIGNS.ServiceReference1.CompositeType composite) {
            return base.Channel.GetDataUsingDataContract(composite);
        }
        
        public System.Threading.Tasks.Task<UI_DESIGNS.ServiceReference1.CompositeType> GetDataUsingDataContractAsync(UI_DESIGNS.ServiceReference1.CompositeType composite) {
            return base.Channel.GetDataUsingDataContractAsync(composite);
        }
    }
}
